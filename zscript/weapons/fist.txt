CLass Fist2 : WeaponZ replaces NewFist
{
	Default
	{
	obituary "%o chewed on %k's fist.";
	weapon.selectionorder 3700;
	weapon.kickback 100;
	+WEAPON.WIMPY_WEAPON;
	+WEAPON.MELEEWEAPON;
	+WEAPON.NOHANDSWITCH;
	scale 1.2;
	}
	
	states
	{
	Ready:
		PUNG A 1 A_WeaponReady;
		loop;
	Deselect:
		PUNG A 1 A_Lower(160);
		loop;
	Select: 
		PUNG A 1 A_Raise(160);
		loop;
	Fire:
		PUNG BC 2;
		PUNG D 2 A_Punch;
		PUNG EF 2;
		PUNG A 7;
		PUNG A 5 A_ReFire;
		goto Ready;
	}
}

CLass OffhandFist : Fist2
{
	Default
	{
	+WEAPON.OFFHANDWEAPON;
	+WEAPON.NOHANDSWITCH;
	}
	
	States
	{
	Ready:
		PUNG A 1 A_WeaponReady;
		PUNG A 0 A_JumpIfInventory("viewletter", 1, "ViewLetter");
		loop;
	Fire:
		PUNG BC 2;
		PUNG D 2 A_Punch;
		PUNG EF 2;
		PUNG A 7;
		PUNG A 5 A_ReFire;
		goto Ready;
	ViewLetter:
		#### A 0
		{
			invoker.letter = invoker.owner.player.mo.countinv("viewletter");
			A_TakeInventory("viewletter", 99);
		}
		LETR A 0 A_JumpIf(invoker.letter == 1, "LetterDisplay");
		LETR B 0 A_JumpIf(invoker.letter == 2, "LetterDisplay");
		LETR C 0 A_JumpIf(invoker.letter == 3, "LetterDisplay");
		LETR D 0 A_JumpIf(invoker.letter == 4, "LetterDisplay");
		LETR E 0 A_JumpIf(invoker.letter == 5, "LetterDisplay");
		LETR F 0 A_JumpIf(invoker.letter == 6, "LetterDisplay");
		LETR G 0 A_JumpIf(invoker.letter == 7, "LetterDisplay");
		LETR H 0 A_JumpIf(invoker.letter == 8, "LetterDisplay");
		LETR I 0 A_JumpIf(invoker.letter == 9, "LetterDisplay");
		LETR J 0 A_JumpIf(invoker.letter == 10, "LetterDisplay");
		LETR K 0 A_JumpIf(invoker.letter == 11, "LetterDisplay");
		LETR L 0 A_JumpIf(invoker.letter == 12, "LetterDisplay");
		LETR M 0 A_JumpIf(invoker.letter == 13, "LetterDisplay");
		LETR N 0 A_JumpIf(invoker.letter == 14, "LetterDisplay");
		LETR O 0 A_JumpIf(invoker.letter == 15, "LetterDisplay");
		LETR P 0 A_JumpIf(invoker.letter == 16, "LetterDisplay");
		PUNG A 1;
		Goto ready;
	LetterDisplay:
		#### # 1 A_WeaponReady;
		wait;
	}
	
	private int letter;
}

Class viewletter : Inventory
{
	Default
	{
	Inventory.maxamount 16;
	}
}

Class TCOTD_OffhandFistHandler : Eventhandler
{
	override void WorldTick()
	{
		if(_isTitlemap) return;
		
		Playerinfo player = Players[ConsolePlayer];
		if(!player) return;
		
		if(!player.OffhandWeapon)
		{
			let weap = Weapon(player.mo.FindInventory("OffhandFist"));
			player.OffhandWeapon = weap;
			player.PendingWeapon = weap;
			player.mo.BringUpWeapon();
		}
	}

	override void WorldLoaded(WorldEvent event)
	{
		_isTitlemap = CheckTitlemap();
	}

	private static bool CheckTitlemap()
	{
		bool isTitlemap = (level.mapname == "TITLEMAP");
		return isTitlemap;
	}
	
	private bool _isTitlemap;
}